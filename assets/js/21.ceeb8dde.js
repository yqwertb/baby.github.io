(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{374:function(_,v,t){"use strict";t.r(v);var e=t(42),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"_2020-12-25-堆糖面试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2020-12-25-堆糖面试"}},[_._v("#")]),_._v(" 2020-12-25 堆糖面试")]),_._v(" "),t("h2",{attrs:{id:"_1-你怎么学习前端的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-你怎么学习前端的"}},[_._v("#")]),_._v(" 1 你怎么学习前端的？")]),_._v(" "),t("h2",{attrs:{id:"_2-介绍flex布局-有使用过什么属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-介绍flex布局-有使用过什么属性"}},[_._v("#")]),_._v(" 2 介绍flex布局 有使用过什么属性？")]),_._v(" "),t("p",[_._v("在父元素上定义的属性：")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("flex-direction")]),_._v(" 元素布局的方向 横或者竖")]),_._v(" "),t("li",[t("code",[_._v("flex-wrap")]),_._v("  当元素长或宽超出父元素的尺寸是否换行")]),_._v(" "),t("li",[t("code",[_._v("justify-content")]),_._v(" 横向的布局方式")]),_._v(" "),t("li",[t("code",[_._v("align-items")]),_._v(" 竖向的布局方式")]),_._v(" "),t("li",[t("code",[_._v("align-content")]),_._v(" 在"),t("code",[_._v("flex-wrap")]),_._v("不为nowrap的情况下，多行的时候每行的布局方式")])]),_._v(" "),t("p",[_._v("在子元素定义的属性：")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("flex-grow")]),_._v(" 规定子元素的放大比例，默认值为0。")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("所有剩余的空间为1")])]),_._v(" "),t("li",[t("p",[_._v("只有一个元素设置"),t("code",[_._v("flex-grow")])]),_._v(" "),t("ul",[t("li",[t("code",[_._v("flex-grow")]),_._v("小于1，将剩余空间乘以设置的值，划给这个元素")]),_._v(" "),t("li",[t("code",[_._v("flex-grow")]),_._v("大于1，将所有的剩余空间划给这个元素")])])]),_._v(" "),t("li",[t("p",[_._v("多个元素设置"),t("code",[_._v("flex-grow")])]),_._v(" "),t("ul",[t("li",[t("code",[_._v("flex-grow")]),_._v("总和小于1，剩余空间按比例划分")]),_._v(" "),t("li",[t("code",[_._v("flex-grow")]),_._v("总和大于1，剩余空间全部利用，按比例划分")])])])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("flex-shrink")]),_._v("规定子元素的缩放比例，默认值为1 ,小于1时，元素收缩不完全，等于0时，元素不收缩。")]),_._v(" "),t("ul",[t("li",[_._v("只有一个元素设置"),t("code",[_._v("flex-shrink")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("flex-shrink")]),_._v("小于1时，收缩不完全，会有内容溢出flex容器")]),_._v(" "),t("li",[t("code",[_._v("flex-shrink")]),_._v("大于1时，完全收缩，完全占满flex容器")])])]),_._v(" "),t("li",[_._v("多个元素设置"),t("code",[_._v("flex-shrink")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("flex-shrink")]),_._v("总和小于1时，每个元素收缩的比例就是设置的值")]),_._v(" "),t("li",[t("code",[_._v("flex-shrink")]),_._v("总和大于1时，完全收缩，收缩的比例就是设置的值")])])])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("flex-basis")]),_._v(" 定义了在分配剩余空间之前元素的默认大小，默认值为auto")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("order")]),_._v(" 值越小，位置越靠后")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("align-self")]),_._v(" 规定当前元素和其他元素不一样的布局方式，覆盖"),t("code",[_._v("align-items")]),_._v("的设置")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2018/10/display-flex-css3-css/",target:"_blank",rel:"noopener noreferrer"}},[_._v("张旭鑫的"),t("OutboundLink")],1)])])]),_._v(" "),t("h2",{attrs:{id:"_3-移动端适配方案-了解vh、vw吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-移动端适配方案-了解vh、vw吗"}},[_._v("#")]),_._v(" 3 移动端适配方案 了解vh、vw吗？")]),_._v(" "),t("p",[_._v("rem: 以根元素字体大小为基准")]),_._v(" "),t("p",[_._v("em： 根据离自己最近元素的字体大小计算，如果本身设置字体大小，则继承本身的，反之向上寻找。")]),_._v(" "),t("p",[_._v("vw/vh : "),t("strong",[_._v("指为浏览器内部的可视区域大小")])]),_._v(" "),t("p",[_._v("媒体查询")]),_._v(" "),t("p",[_._v("设计稿的转化： 设计稿宽度为750px 手机实际宽度375px 规定1rem=100px（设计稿的），fontsize=375/750*100 = 50px")]),_._v(" "),t("h2",{attrs:{id:"_4-说几种使元素消失的方法-它们有什么区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-说几种使元素消失的方法-它们有什么区别"}},[_._v("#")]),_._v(" 4 说几种使元素消失的方法，它们有什么区别？")]),_._v(" "),t("p",[t("code",[_._v("display: none")]),_._v(" 在页面中彻底消失，原有位置可能被其他元素占据，导致回流和重绘")]),_._v(" "),t("p",[t("code",[_._v("visibility: hidden")]),_._v("  还在页面中，只是隐藏起来，只会导致重绘")]),_._v(" "),t("p",[t("code",[_._v("opacity：0")]),_._v(" 在页面中，只是设置元素的透明度为0")]),_._v(" "),t("h2",{attrs:{id:"_5-选择器权重的计算方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-选择器权重的计算方法"}},[_._v("#")]),_._v(" 5 选择器权重的计算方法")]),_._v(" "),t("p",[_._v("important  > 内联 > id > (class 属性 伪类) > (标签 伪元素)")]),_._v(" "),t("p",[_._v("通配符 关系选择器 无影响")]),_._v(" "),t("h2",{attrs:{id:"_6-http-tcp-三次握手-四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-http-tcp-三次握手-四次挥手"}},[_._v("#")]),_._v(" *6 HTTP/TCP 三次握手 四次挥手")]),_._v(" "),t("h2",{attrs:{id:"_7-http状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-http状态码"}},[_._v("#")]),_._v(" *7 HTTP状态码")]),_._v(" "),t("ol",[t("li",[_._v("1xx：服务器已经收到请求")]),_._v(" "),t("li",[_._v("2xx：响应成功")]),_._v(" "),t("li",[_._v("3xx：需要进一步的操作，即重定向")]),_._v(" "),t("li",[_._v("4xx：客户端请求错误")]),_._v(" "),t("li",[_._v("5xx：服务器响应错误")])]),_._v(" "),t("p",[_._v("常见状态码")]),_._v(" "),t("p",[t("strong",[_._v("101 协议升级")])]),_._v(" "),t("p",[_._v("204 NO Content")]),_._v(" "),t("p",[_._v("​\t用来做正式请求的预请求，只需要确认确认请求能不能通过，只需要一个结果，不要返回其他内容")]),_._v(" "),t("p",[_._v("206 Partial Content")]),_._v(" "),t("p",[_._v("只返回了请求资源的部分内容，需要在请求头中加入"),t("code",[_._v("range")])]),_._v(" "),t("p",[_._v("301 Moved Permanently")]),_._v(" "),t("p",[_._v("资源被永久重定向，响应头部的"),t("code",[_._v("location")]),_._v("返回一个新地址")]),_._v(" "),t("p",[_._v("302 Found")]),_._v(" "),t("p",[_._v("资源被临时重定向")]),_._v(" "),t("p",[_._v("303")]),_._v(" "),t("p",[_._v("强制将POST请求转为GET请求")]),_._v(" "),t("p",[t("strong",[_._v("304 Not Modifed")])]),_._v(" "),t("p",[_._v("协商缓存")]),_._v(" "),t("p",[t("strong",[_._v("307 hsts跳转")])]),_._v(" "),t("p",[_._v("在服务器响应头添加"),t("code",[_._v("Strict-Transport-Security")])]),_._v(" "),t("p",[_._v("400 Bad Request")]),_._v(" "),t("p",[_._v("请求中语法错误")]),_._v(" "),t("p",[_._v("401 Unauthorized")]),_._v(" "),t("p",[_._v("如果请求头中的"),t("code",[_._v("Authorization")]),_._v("内容有问题，即未通过认证")]),_._v(" "),t("p",[_._v("403 Forbidden")]),_._v(" "),t("p",[_._v("无权限访问")]),_._v(" "),t("p",[_._v("500 Internal Server Error")]),_._v(" "),t("p",[_._v("服务器故障")]),_._v(" "),t("h2",{attrs:{id:"_8-get和post的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-get和post的区别"}},[_._v("#")]),_._v(" 8 GET和POST的区别")]),_._v(" "),t("ol",[t("li",[_._v("浏览器在回退的时候，get不会重新请求，post会重新请求")]),_._v(" "),t("li",[_._v("get请求会被浏览器主动缓存和保留在浏览器的历史记录里，post不会")]),_._v(" "),t("li",[_._v("浏览器对get请求中的参数有大小限制，post没有")]),_._v(" "),t("li",[_._v("get的参数直接跟在url后面，post是在请求体中")]),_._v(" "),t("li",[_._v("get请求对数据类型有限制，post请求没有")])]),_._v(" "),t("h2",{attrs:{id:"_9-浏览器事件循环机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-浏览器事件循环机制"}},[_._v("#")]),_._v(" 9 浏览器事件循环机制")]),_._v(" "),t("p",[_._v("浏览器事件循环：js是单线程的，代码执行的过程中会产生执行上下文，执行上下文会被按顺序压入主执行栈中，遇到宏任务和微任务会被加入到相应的任务队列中。当主执行栈为空后，按顺序执行任务队列，先执行微任务队列，再执行宏任务队列。如果任务队列中发现宏任务和微任务，再加入到相应的任务队列中。")]),_._v(" "),t("ul",[t("li",[_._v("宏任务\n"),t("ul",[t("li",[_._v("setTimeout")]),_._v(" "),t("li",[_._v("setImmediate")]),_._v(" "),t("li",[_._v("setInterval")]),_._v(" "),t("li",[_._v("script")])])]),_._v(" "),t("li",[_._v("微任务\n"),t("ul",[t("li",[_._v("promise")]),_._v(" "),t("li",[_._v("process.nextTick")]),_._v(" "),t("li",[_._v("MutationObserver")])])])]),_._v(" "),t("h2",{attrs:{id:"_10-js数据类型-深拷贝、浅拷贝、类型检测"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-js数据类型-深拷贝、浅拷贝、类型检测"}},[_._v("#")]),_._v(" 10 JS数据类型（深拷贝、浅拷贝、类型检测）")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("基本")]),_._v(" "),t("p",[t("code",[_._v("undefined")]),_._v(" "),t("code",[_._v("null")]),_._v(" "),t("code",[_._v("Number")]),_._v(" "),t("code",[_._v("String")]),_._v(" "),t("code",[_._v("Boolean")]),_._v(" "),t("code",[_._v("symbol")])])]),_._v(" "),t("li",[t("p",[_._v("引用")]),_._v(" "),t("p",[t("code",[_._v("object")]),_._v(" "),t("code",[_._v("array")]),_._v(" "),t("code",[_._v("function")]),_._v(" "),t("code",[_._v("Math")]),_._v(" "),t("code",[_._v("RegExp")])])]),_._v(" "),t("li",[t("p",[_._v("基本数据类型和引用数据类型有什么区别")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("基本类型")]),_._v(" "),t("ul",[t("li",[_._v("存储在栈内存中")]),_._v(" "),t("li",[_._v("按值访问，操作实际保存的值")]),_._v(" "),t("li",[_._v("复制变量，改变源数据不会影响新变量，会在栈中创建新的内存存储变量")])])]),_._v(" "),t("li",[t("p",[_._v("引用数据类型")]),_._v(" "),t("ul",[t("li",[_._v("存储在堆内存中")]),_._v(" "),t("li",[_._v("按引用访问，变量存的是地址")]),_._v(" "),t("li",[_._v("复制变量是复制地址，改变任意一个数据会影响另一个数据")])])])])]),_._v(" "),t("li",[t("p",[_._v("两种类型拷贝有什么区别？")]),_._v(" "),t("p",[t("strong",[_._v("引用类型数据的赋值不是浅拷贝")])]),_._v(" "),t("p",[t("strong",[_._v("浅拷贝只拷贝第一层的基本数据类型的值和引用数据类型的地址")])]),_._v(" "),t("ul",[t("li",[_._v("赋值：基本类型的赋值，两个变量互不影响；引用类型中的基本类型会影响")]),_._v(" "),t("li",[_._v("浅拷贝：创建一个新的对象，属性是基本类型的值就拷贝数据，引用类型就拷贝地址")]),_._v(" "),t("li",[_._v("深拷贝：创建一个新的对象，使引用类型的属性和源数据不互相影响。")])]),_._v(" "),t("p",[_._v("浅拷贝：object.assign() array.concat() array.slice()")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}}),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("和原数据是否指向同一地址")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("第一层数据为基本数据类型")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("第一层数据为引用数据类型")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("赋值")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("是")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据改变")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据改变")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("浅拷贝")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("否")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据不改变")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据改变")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("深拷贝")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("否")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据不改变")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("原数据不改变")])])])])]),_._v(" "),t("li",[t("p",[_._v("递归的方式实现深拷贝 有什么问题")]),_._v(" "),t("p",[_._v("当数据的层次很深，可能造成栈溢出")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000016672263",target:"_blank",rel:"noopener noreferrer"}},[_._v("url1"),t("OutboundLink")],1)])]),_._v(" "),t("li",[t("p",[_._v("怎么做数据的类型检测")]),_._v(" "),t("ul",[t("li",[t("p",[t("code",[_._v("typeof")])]),_._v(" "),t("p",[_._v("无法判断数组、"),t("code",[_._v("null")]),_._v("、对象")])]),_._v(" "),t("li",[t("p",[t("code",[_._v("instanceof")])]),_._v(" "),t("p",[_._v("无法判断"),t("code",[_._v("null")]),_._v(" "),t("code",[_._v("undefined")])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("construtor")])]),_._v(" "),t("p",[_._v("无法判断"),t("code",[_._v("null")]),_._v(" "),t("code",[_._v("undefined")])])]),_._v(" "),t("li",[t("p",[t("code",[_._v("Object.prototype.toString.call")])]),_._v(" "),t("p",[_._v("无法判断非原生构造函数")])])])])]),_._v(" "),t("h2",{attrs:{id:"_11-数组去重的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-数组去重的方法"}},[_._v("#")]),_._v(" 11  数组去重的方法")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://chance.wodeyyb.cn/test/test1.html#_3-%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D",target:"_blank",rel:"noopener noreferrer"}},[_._v("去重在此"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"_12-set和map的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-set和map的区别"}},[_._v("#")]),_._v(" 12 Set和Map的区别")]),_._v(" "),t("h2",{attrs:{id:"_13-es6你都用过什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-es6你都用过什么"}},[_._v("#")]),_._v(" 13 ES6你都用过什么？")]),_._v(" "),t("p",[_._v("let const  箭头函数 模板字符串  解构赋值  对象属性简写  模块化 promise")]),_._v(" "),t("h2",{attrs:{id:"_14-var-let-const区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-var-let-const区别"}},[_._v("#")]),_._v(" 14 var let const区别")]),_._v(" "),t("p",[_._v("var 不存在块级作用域，在变量赋值之前使用变量，变量值是undefined")]),_._v(" "),t("p",[_._v("let 存在块级作用域，只能在声明变量后使用")]),_._v(" "),t("p",[_._v("const 存在块级作用域，对于基本数据类型，不能修改变量值；对于引用数据类型，可以改变变量中的属性")]),_._v(" "),t("h2",{attrs:{id:"_15-函数作用域和块级作用域的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-函数作用域和块级作用域的区别"}},[_._v("#")]),_._v(" 15 函数作用域和块级作用域的区别")]),_._v(" "),t("h2",{attrs:{id:"_16-event-bus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-event-bus"}},[_._v("#")]),_._v(" 16 event bus")]),_._v(" "),t("p",[_._v("在main.js中给Vue的原型上添加一个新的vue实例（不具有DOM组件，只有Vue的方法）")]),_._v(" "),t("p",[t("code",[_._v("Vue.prototype.$eventBus = new Vue()")])]),_._v(" "),t("p",[_._v("发送事件：")]),_._v(" "),t("p",[_._v("`import eventBus from './main,js'")]),_._v(" "),t("p",[_._v("mouted() {")]),_._v(" "),t("p",[_._v("​\teventBus.$emit('事件名',数据)")]),_._v(" "),t("p",[_._v("}`")]),_._v(" "),t("p",[_._v("接受事件：")]),_._v(" "),t("p",[_._v("`import eventBus from './main,js'")]),_._v(" "),t("p",[_._v("mouted() {")]),_._v(" "),t("p",[_._v("​\teventBus.$on('事件名',callback(payload))")]),_._v(" "),t("p",[_._v("}`\n销毁事件监听")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("EventBus.$off('事件名', callback)")]),_._v("，只移除这个回调的监听器。")]),_._v(" "),t("li",[t("code",[_._v("EventBus.$off('事件名')")]),_._v("，移除该事件所有的监听器。")]),_._v(" "),t("li",[t("code",[_._v("EventBus.$off()")]),_._v("， 移除所有的事件监听器，注意不需要添加任何参数。")])]),_._v(" "),t("h2",{attrs:{id:"_17-组件要发送异步请求-会放在哪个生命周期里"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-组件要发送异步请求-会放在哪个生命周期里"}},[_._v("#")]),_._v(" 17 组件要发送异步请求，会放在哪个生命周期里？")]),_._v(" "),t("p",[_._v("created和mounted发送异步请求是一样的，因为两个方法是在同一个tick中执行的，但是在created中发送可以更快的获取到数据。")]),_._v(" "),t("h2",{attrs:{id:"_18-history-和-hash的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-history-和-hash的区别"}},[_._v("#")]),_._v(" 18 history 和 hash的区别")]),_._v(" "),t("ul",[t("li",[_._v("hash模式是依靠监听"),t("code",[_._v("location.hash")]),_._v("的改变")]),_._v(" "),t("li",[_._v("history模式是依靠"),t("code",[_._v("pushState()")]),_._v("和"),t("code",[_._v("replaceState()")])])]),_._v(" "),t("h2",{attrs:{id:"_19-vue3-了解过什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-vue3-了解过什么"}},[_._v("#")]),_._v(" 19 Vue3 了解过什么？")]),_._v(" "),t("h2",{attrs:{id:"_20-vue-cli-进行配置设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-vue-cli-进行配置设置"}},[_._v("#")]),_._v(" 20 Vue-Cli 进行配置设置")]),_._v(" "),t("h2",{attrs:{id:"_21-webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-webpack"}},[_._v("#")]),_._v(" 21 Webpack")]),_._v(" "),t("h2",{attrs:{id:"_22-为什么选择vue而不是react"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-为什么选择vue而不是react"}},[_._v("#")]),_._v(" 22 为什么选择Vue而不是React")]),_._v(" "),t("p",[_._v("问的是这两个的区别")]),_._v(" "),t("h2",{attrs:{id:"_23-如何在vue中获取组件的dom结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-如何在vue中获取组件的dom结构"}},[_._v("#")]),_._v(" 23 如何在Vue中获取组件的Dom结构")]),_._v(" "),t("ul",[t("li",[_._v("通过选择器获取")]),_._v(" "),t("li",[_._v("通过组件或者vue实例的refs属性获取")])]),_._v(" "),t("h2",{attrs:{id:"_24-vue中watch和computed的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-vue中watch和computed的区别"}},[_._v("#")]),_._v(" 24 Vue中watch和computed的区别")])])}),[],!1,null,null,null);v.default=a.exports}}]);