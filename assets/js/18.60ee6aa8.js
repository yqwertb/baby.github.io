(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{371:function(e,t,v){"use strict";v.r(t);var _=v(42),a=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"vue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[e._v("#")]),e._v(" VUE")]),e._v(" "),v("h2",{attrs:{id:"_1-vue-nexttick"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue-nexttick"}},[e._v("#")]),e._v(" 1 vue.nextTick")]),e._v(" "),v("p",[v("code",[e._v("vue.nextTick(function)")]),e._v("的作用是将某些操作延迟到下次数据更新后使用它")]),e._v(" "),v("p",[e._v("将回调函数延迟到下次DOM更新循环后执行。在修改数据之后立即使用它，然后等待DOM更新。")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://libin1991.github.io/2017/10/21/%E9%9D%A2%E8%AF%95%E4%B9%8BVue-nextTick%E5%8E%9F%E7%90%86/",target:"_blank",rel:"noopener noreferrer"}},[e._v("nextTick的好文章"),v("OutboundLink")],1)]),e._v(" "),v("h2",{attrs:{id:"_2-对于mvvm的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-对于mvvm的理解"}},[e._v("#")]),e._v(" 2 对于MVVM的理解")]),e._v(" "),v("p",[e._v("MVVM：Model-View-ViewModel")]),e._v(" "),v("p",[e._v("MVC：Model-View-Controller")]),e._v(" "),v("p",[e._v("MVVM将MVC中的Controller变为ViewModel层")]),e._v(" "),v("ul",[v("li",[e._v("Model代表数据模型，可以定义数据的操作，只关心数据本身")]),e._v(" "),v("li",[e._v("View代表UI组件、用户操作界面，当ViewModel对Model的数据进行更新的时候，会通过数据绑定更新到View")]),e._v(" "),v("li",[e._v("ViewModel代表业务逻辑层，View需要什么数据，ViewModel提供这个数据；View需要什么操作，ViewModel要响应这些操作，ViewModel是Model for View")])]),e._v(" "),v("p",[e._v("总结：ViewModel是View和Model的桥梁，数据会绑定到ViewModel层并将数据渲染到View层，View层变化的时候会通知ViewModel层进行数据更新。MVVM模式简化了界面和业务的依赖，解决了数据频繁更新的问题。")]),e._v(" "),v("h2",{attrs:{id:"_3-v-if和v-show的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-v-if和v-show的区别"}},[e._v("#")]),e._v(" 3 v-if和v-show的区别")]),e._v(" "),v("p",[e._v("v-if 条件不成立，是不会渲染到DOM上的 有更低的首次渲染的开销")]),e._v(" "),v("p",[e._v("v-show 条件不成立，是将DOM中元素的"),v("code",[e._v("display")]),e._v("值改为none，有更高的首次渲染的开销")]),e._v(" "),v("p",[e._v("v-if 有更高的切换开销，v-show 切换开销小。")]),e._v(" "),v("h2",{attrs:{id:"_4-v-model的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-v-model的原理"}},[e._v("#")]),e._v(" 4 v-model的原理")]),e._v(" "),v("p",[v("code",[e._v("v-model")]),e._v("本质就是一个语法糖，可以看成是"),v("code",[e._v("value + input")]),e._v("方法的语法糖。 可以通过"),v("code",[e._v("model")]),e._v("属性的"),v("code",[e._v("prop")]),e._v("和"),v("code",[e._v("event")]),e._v("属性来进行自定义。原生的"),v("code",[e._v("v-model")]),e._v("，会根据标签的不同生成不同的事件和属性")]),e._v(" "),v("p",[v("strong",[e._v("触发input事件，并传递参数")])]),e._v(" "),v("h2",{attrs:{id:"_5-vue中key值的作用和原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue中key值的作用和原理"}},[e._v("#")]),e._v(" 5 Vue中key值的作用和原理")]),e._v(" "),v("ul",[v("li",[e._v("v-for遍历时，用id，uuid之类作为key，唯一标识节点加速虚拟DOM渲染")]),e._v(" "),v("li",[e._v("响应式系统没有监听到的数据，用new Date()生成的时间戳作为key，手动强制触发重新渲染")])]),e._v(" "),v("p",[v("strong",[e._v("原理")])]),e._v(" "),v("p",[e._v("key用于Virtual Dom算法，在diff算法中，比较新的和旧的dom列表时，作为识别node的一个标志，")]),e._v(" "),v("h5",{attrs:{id:"如果是同一个node-就直接使用原来的-不用重新创建。拥有key的node不再出现的时候-会被移除或者销毁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如果是同一个node-就直接使用原来的-不用重新创建。拥有key的node不再出现的时候-会被移除或者销毁"}},[e._v("#")]),e._v(" 如果是同一个node，就直接使用原来的，不用重新创建。拥有key的node不再出现的时候，会被移除或者销毁")]),e._v(" "),v("h2",{attrs:{id:"_6-vue数据双向绑定的原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue数据双向绑定的原理"}},[e._v("#")]),e._v(" 6 Vue数据双向绑定的原理")]),e._v(" "),v("h2",{attrs:{id:"_7-vue生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-vue生命周期"}},[e._v("#")]),e._v(" 7 Vue生命周期")]),e._v(" "),v("p",[e._v("created mounted updated destroyed")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://segmentfault.com/a/1190000013579739",target:"_blank",rel:"noopener noreferrer"}},[e._v("学习源码"),v("OutboundLink")],1)]),e._v(" "),v("h2",{attrs:{id:"_8-组件间通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-组件间通信"}},[e._v("#")]),e._v(" 8 组件间通信")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("props/$emit")]),e._v(" 父子间通信")]),e._v(" "),v("li",[v("code",[e._v("$ref")]),e._v("和"),v("code",[e._v("$parent / $children")]),e._v(" 父子间通信")]),e._v(" "),v("li",[v("code",[e._v("eventBus")])])]),e._v(" "),v("h2",{attrs:{id:"_9-computed-和-watch的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_9-computed-和-watch的区别"}},[e._v("#")]),e._v(" 9 computed 和 watch的区别")])])}),[],!1,null,null,null);t.default=a.exports}}]);